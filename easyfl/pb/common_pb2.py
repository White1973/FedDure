# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: easyfl/pb/common.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16\x65\x61syfl/pb/common.proto\x12\teasyfl.pb\">\n\x06Status\x12#\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x15.easyfl.pb.StatusCode\x12\x0f\n\x07message\x18\x02 \x01(\t\"4\n\nTaskMetric\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x15\n\rconfiguration\x18\x02 \x01(\t\"\xcf\x02\n\x0bRoundMetric\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x10\n\x08round_id\x18\x02 \x01(\x05\x12\x15\n\rtest_accuracy\x18\x03 \x01(\x02\x12\x11\n\ttest_loss\x18\x04 \x01(\x02\x12\x12\n\nround_time\x18\x05 \x01(\x02\x12\x12\n\ntrain_time\x18\x06 \x01(\x02\x12\x11\n\ttest_time\x18\x07 \x01(\x02\x12\x1d\n\x15train_distribute_time\x18\x08 \x01(\x02\x12\x1c\n\x14test_distribute_time\x18\t \x01(\x02\x12\x19\n\x11train_upload_size\x18\n \x01(\x02\x12\x1b\n\x13train_download_size\x18\x0b \x01(\x02\x12\x18\n\x10test_upload_size\x18\x0c \x01(\x02\x12\x1a\n\x12test_download_size\x18\r \x01(\x02\x12\r\n\x05\x65xtra\x18\x0e \x01(\t\"\xf3\x02\n\x0c\x43lientMetric\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x10\n\x08round_id\x18\x02 \x01(\x05\x12\x11\n\tclient_id\x18\x03 \x01(\t\x12\x16\n\x0etrain_accuracy\x18\x04 \x03(\x02\x12\x12\n\ntrain_loss\x18\x05 \x03(\x02\x12\x15\n\rtest_accuracy\x18\x06 \x01(\x02\x12\x11\n\ttest_loss\x18\x07 \x01(\x02\x12\x12\n\ntrain_time\x18\x08 \x01(\x02\x12\x11\n\ttest_time\x18\t \x01(\x02\x12\x19\n\x11train_upload_time\x18\n \x01(\x02\x12\x18\n\x10test_upload_time\x18\x0b \x01(\x02\x12\x19\n\x11train_upload_size\x18\x0c \x01(\x02\x12\x1b\n\x13train_download_size\x18\r \x01(\x02\x12\x18\n\x10test_upload_size\x18\x0e \x01(\x02\x12\x1a\n\x12test_download_size\x18\x0f \x01(\x02\x12\r\n\x05\x65xtra\x18\x10 \x01(\t*\x82\x01\n\nStatusCode\x12\t\n\x05SC_OK\x10\x00\x12\x0e\n\nSC_UNKNOWN\x10\x01\x12\x16\n\x12SC_INVALID_REQUEST\x10\x02\x12\x18\n\x14SC_DEADLINE_EXCEEDED\x10\x03\x12\x10\n\x0cSC_NOT_FOUND\x10\x04\x12\x15\n\x11SC_ALREADY_EXISTS\x10\x05*;\n\x08\x44\x61taType\x12\x14\n\x10\x44\x41TA_TYPE_PARAMS\x10\x00\x12\x19\n\x15\x44\x41TA_TYPE_PERFORMANCE\x10\x01\x62\x06proto3')

_STATUSCODE = DESCRIPTOR.enum_types_by_name['StatusCode']
StatusCode = enum_type_wrapper.EnumTypeWrapper(_STATUSCODE)
_DATATYPE = DESCRIPTOR.enum_types_by_name['DataType']
DataType = enum_type_wrapper.EnumTypeWrapper(_DATATYPE)
SC_OK = 0
SC_UNKNOWN = 1
SC_INVALID_REQUEST = 2
SC_DEADLINE_EXCEEDED = 3
SC_NOT_FOUND = 4
SC_ALREADY_EXISTS = 5
DATA_TYPE_PARAMS = 0
DATA_TYPE_PERFORMANCE = 1


_STATUS = DESCRIPTOR.message_types_by_name['Status']
_TASKMETRIC = DESCRIPTOR.message_types_by_name['TaskMetric']
_ROUNDMETRIC = DESCRIPTOR.message_types_by_name['RoundMetric']
_CLIENTMETRIC = DESCRIPTOR.message_types_by_name['ClientMetric']
Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), {
  'DESCRIPTOR' : _STATUS,
  '__module__' : 'easyfl.pb.common_pb2'
  # @@protoc_insertion_point(class_scope:easyfl.pb.Status)
  })
_sym_db.RegisterMessage(Status)

TaskMetric = _reflection.GeneratedProtocolMessageType('TaskMetric', (_message.Message,), {
  'DESCRIPTOR' : _TASKMETRIC,
  '__module__' : 'easyfl.pb.common_pb2'
  # @@protoc_insertion_point(class_scope:easyfl.pb.TaskMetric)
  })
_sym_db.RegisterMessage(TaskMetric)

RoundMetric = _reflection.GeneratedProtocolMessageType('RoundMetric', (_message.Message,), {
  'DESCRIPTOR' : _ROUNDMETRIC,
  '__module__' : 'easyfl.pb.common_pb2'
  # @@protoc_insertion_point(class_scope:easyfl.pb.RoundMetric)
  })
_sym_db.RegisterMessage(RoundMetric)

ClientMetric = _reflection.GeneratedProtocolMessageType('ClientMetric', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTMETRIC,
  '__module__' : 'easyfl.pb.common_pb2'
  # @@protoc_insertion_point(class_scope:easyfl.pb.ClientMetric)
  })
_sym_db.RegisterMessage(ClientMetric)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _STATUSCODE._serialized_start=868
  _STATUSCODE._serialized_end=998
  _DATATYPE._serialized_start=1000
  _DATATYPE._serialized_end=1059
  _STATUS._serialized_start=37
  _STATUS._serialized_end=99
  _TASKMETRIC._serialized_start=101
  _TASKMETRIC._serialized_end=153
  _ROUNDMETRIC._serialized_start=156
  _ROUNDMETRIC._serialized_end=491
  _CLIENTMETRIC._serialized_start=494
  _CLIENTMETRIC._serialized_end=865
# @@protoc_insertion_point(module_scope)
